module Module54 {
    function FuncA::<T: const> (
        a: input logic<T>,
    ) -> logic<T> {
        return a + 1;
    }

    let _a: logic<10> = FuncA::<10>(1);
    let _b: logic<10> = FuncA::<10>(1);
    let _c: logic<20> = FuncA::<20>(1);
    let _d: logic<20> = FuncA::<20>(1);

    function FuncB::<A: const, B: const = 2> (
        a: input logic<A + B>,
    ) -> logic<A + B> {
        return a + 1;
    }

    let _e: logic<12> = FuncB::<10>(1);
    let _f: logic<12> = FuncB::<10>(1);
    let _g: logic<14> = FuncB::<10, 4>(1);
    let _h: logic<14> = FuncB::<10, 4>(1);

    function FuncC::<IF: inst Interface54> () -> logic {
        return IF.a;
    }

    inst u: Interface54;

    let _i: logic = FuncC::<u>();
}

interface Interface54 {
    var a: logic;
}
